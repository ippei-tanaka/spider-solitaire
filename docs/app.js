(()=>{"use strict";var e={22:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Emitter=void 0;var n=r(187),i=function(){function e(){this.emitter=new n.EventEmitter}return e.prototype.on=function(e,t){this.emitter.on(e,t)},e.prototype.off=function(e,t){this.emitter.off(e,t)},e.prototype.emit=function(e,t){this.emitter.emit(e,t)},e}();t.Emitter=i},539:function(e,t,r){var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Button=void 0;var o=a(r(260)).default.GameObjects,s=o.Text,c=o.Container,u=o.Rectangle,l=function(e){function t(t){var r=t.scene,n=t.x,i=t.y,a=t.label,o=e.call(this,r,n,i)||this;return o._disabled=!1,o.render(a),o}return i(t,e),t.prototype.render=function(e){var t=new s(this.scene,0,0,e,{fontSize:"21px",color:"#000000",fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif'}),r=new u(this.scene,0,0,t.width+30,t.height+20);r.setFillStyle(16777215,1),r.setStrokeStyle(2,0),this.add(r),t.x-=t.width/2,t.y-=t.height/2,this.add(t),this.setSize(r.width,r.height),this.setInteractive(),this.on("pointerover",(function(){r.setStrokeStyle(2,16711680)})),this.on("pointerout",(function(){r.setStrokeStyle(2,0)}))},t.prototype.disable=function(){this._disabled=!0,this.setAlpha(.5),this.disableInteractive()},t.prototype.enable=function(){this._disabled=!1,this.setAlpha(1),this.setInteractive()},Object.defineProperty(t.prototype,"isDisabled",{get:function(){return this._disabled},enumerable:!1,configurable:!0}),t}(c);t.Button=l},852:function(e,t,r){var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CardGameObject=void 0;var o=a(r(260)),s=r(291),c=o.default.GameObjects,u=c.Text,l=c.Rectangle,d=c.Container,f=function(e){switch(e){case s.Suit.Spade:case s.Suit.Club:return"#000000";case s.Suit.Diamond:case s.Suit.Heart:return"#ff0000";case s.Suit.Star:return"#0951f7"}},h=function(e){function t(t){var r=t.scene,n=t.x,i=t.y,a=t.suit,o=t.rank,s=t.isFaceUp,c=t.name,u=e.call(this,r,n,i)||this;return u._isHighLighted=!1,u.render(a,o),u.name=c,u._suit=a,u._rank=o,u.back.visible=!s,u}return i(t,e),Object.defineProperty(t.prototype,"suit",{get:function(){return this._suit},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rank",{get:function(){return this._rank},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"frame",{get:function(){if(!this._frame)throw new Error;return this._frame},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"back",{get:function(){if(!this._back)throw new Error;return this._back},enumerable:!1,configurable:!0}),t.prototype.render=function(e,r){var n=new l(this.scene,0,0,t.WIDTH,t.HEIGHT,16777215);n.setStrokeStyle(2,0),this.add(n),this._frame=n;var i=new u(this.scene,-33,-55,function(e){return 11===e?"J":12===e?"Q":13===e?"K":e.toString()}(r)+function(e){switch(e){case s.Suit.Spade:return"♠";case s.Suit.Club:return"♣";case s.Suit.Diamond:return"♦";case s.Suit.Heart:return"♥";case s.Suit.Star:return"★"}}(e),{fontSize:"25px",color:f(e),fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif'});this.add(i),this._back=new d(this.scene,0,0);var a=new l(this.scene,0,0,t.WIDTH-20,t.HEIGHT-20,11184810);a.setStrokeStyle(3,11184810);var o=new l(this.scene,0,0,t.WIDTH-2,t.HEIGHT-2,16777215);this.back.add(o),this.back.add(a),this.add(this.back),this.setSize(t.WIDTH,t.HEIGHT),this.setInteractive({draggable:!0})},t.prototype.flipOver=function(e){var t=this;return new Promise((function(r){var n=t.scene.tweens.createTimeline();n.add({targets:t,props:{scaleX:0},duration:35,onComplete:function(){t.back.visible=!e}}),n.add({targets:t,props:{scaleX:1},duration:35,onComplete:function(){r()}}),n.play()}))},Object.defineProperty(t.prototype,"isFaceUp",{get:function(){return!this.back.visible},enumerable:!1,configurable:!0}),t.prototype.addHighlight=function(){this.frame.setStrokeStyle(2,16711680),this._isHighLighted=!0},t.prototype.removeHighlight=function(){this.frame.setStrokeStyle(2,0),this._isHighLighted=!1},Object.defineProperty(t.prototype,"isHighLighted",{get:function(){return this._isHighLighted},enumerable:!1,configurable:!0}),t.WIDTH=70,t.HEIGHT=110,t}(d);t.CardGameObject=h},895:function(e,t,r){var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),a=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,a){function o(e){try{c(n.next(e))}catch(e){a(e)}}function s(e){try{c(n.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(o,s)}c((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var r,n,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,n=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},s=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var a=arguments[t],o=0,s=a.length;o<s;o++,i++)n[i]=a[o];return n},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PileGameObject=void 0;var u=c(r(260)),l=r(852),d=r(202),f=function(e){function t(t){var r=t.scene,n=t.x,i=t.y,a=t.name,o=t.isSpread,s=t.isDropTarget,c=t.showDropZone,u=e.call(this,r,n,i)||this;return u._isSpread=!1,u._cardGameObjects=[],u._faceDownCardGap=15,u._faceUpCardGap=26,u._maxHeightOfGaps=380-l.CardGameObject.HEIGHT,u.name=a,o&&(u._isSpread=!0),s&&(u._zone=u.renderZone()),c&&(u._zoneRect=u.renderZoneRect()),(s||c)&&u.resizeZone(),u}return i(t,e),t.prototype.renderZone=function(){var e=new u.default.GameObjects.Zone(this.scene,0,0,1,1);return this.add(e),e},t.prototype.renderZoneRect=function(){var e=new u.default.GameObjects.Rectangle(this.scene,0,0,1,1,16777215,.5);return this.add(e),e},t.prototype.resizeZone=function(){var e=l.CardGameObject.WIDTH,t=this._cardGameObjects[this._cardGameObjects.length-1],r=l.CardGameObject.HEIGHT+(t?t.y:0),n=r/2-l.CardGameObject.HEIGHT/2;this._zone&&(this._zone.x=0,this._zone.y=n,this._zone.width=e,this._zone.height=r,this._zone.setRectangleDropZone(e,r),this._zone.input.hitArea.setSize(e,r),this._zone.setOrigin(this._zone.originX,this._zone.originY)),this._zoneRect&&(this._zoneRect.x=0,this._zoneRect.y=n,this._zoneRect.width=e,this._zoneRect.height=r,this._zoneRect.setOrigin(this._zoneRect.originX,this._zoneRect.originY))},Object.defineProperty(t.prototype,"zone",{get:function(){return this._zone},enumerable:!1,configurable:!0}),t.prototype.getNewFrontCardGameObjectPosition=function(){var e=this._getAdjustedCardGameObjectPositions(),t=e[e.length-1];return t?{x:0,y:t.y+this._faceUpCardGap}:{x:0,y:0}},t.prototype._getAdjustedCardGameObjectPositions=function(){if(!this._isSpread||this._cardGameObjects.length<=1)return this._cardGameObjects.map((function(e,t){return{x:0,y:0,depth:t,cardGameObject:e}}));var e=this._cardGameObjects.length-1,t=this._cardGameObjects.slice(0,-1).reduce((function(e,t){return e+(t.isFaceUp?1:0)}),0),r=e-t,n=t*this._faceUpCardGap+r*this._faceDownCardGap,i=this._faceUpCardGap,a=this._faceDownCardGap;n>this._maxHeightOfGaps&&(i=this._maxHeightOfGaps/(t+r*this._faceDownCardGap/this._faceUpCardGap),a=this._maxHeightOfGaps/(r+t*this._faceUpCardGap/this._faceDownCardGap));for(var o=0,c=[],u=0;u<this._cardGameObjects.length;u++){var l=this._cardGameObjects[u];c=s(c,[{x:0,y:o,cardGameObject:l}]),o+=l.isFaceUp?i:a}return c},t.prototype.adjustCardGameObjectPositionsWithAnimation=function(){return a(this,void 0,void 0,(function(){var e,t=this;return o(this,(function(r){switch(r.label){case 0:return e=this._getAdjustedCardGameObjectPositions(),[4,Promise.all(e.filter((function(e){return e.x!==e.cardGameObject.x||e.y!==e.cardGameObject.y})).map((function(e){return new Promise((function(r){t.scene.tweens.add({targets:e.cardGameObject,props:{x:e.x,y:e.y},duration:45,onComplete:function(){return r()}})}))}))).then((function(){return t.resizeZone()}))];case 1:return r.sent(),[2]}}))}))},t.prototype.adjustCardGameObjectPositions=function(){for(var e=0,t=this._getAdjustedCardGameObjectPositions();e<t.length;e++){var r=t[e];r.cardGameObject.x=r.x,r.cardGameObject.y=r.y}this.resizeZone()},t.prototype.expandWithAnimation=function(){return a(this,void 0,void 0,(function(){var e=this;return o(this,(function(t){switch(t.label){case 0:return[4,new Promise((function(t){e.scaleX=1,e.scaleY=1,e.scene.tweens.add({targets:e,props:{scaleX:1.1,scaleY:1.1},duration:35,onComplete:function(){return t()}})}))];case 1:return t.sent(),[2]}}))}))},t.prototype.placeCardGameObjects=function(e){for(var t=e.cardGameObjects,r=d.getWorldPosition(this),n=0;n<t.length;n++){var i=t[n];i.x=i.x-r.x,i.y=i.y-r.y,this.add(i)}this._cardGameObjects=s(this._cardGameObjects,t)},t.prototype.getFrontGameObjects=function(e){var t=e.size;return this._cardGameObjects.slice(-t)},t.prototype.removeFrontGameObjects=function(e){for(var t=e.size,r=this.getFrontGameObjects({size:t}),n=d.getWorldPosition(this),i=0;i<r.length;i++){var a=r[i];a.x=a.x+n.x,a.y=a.y+n.y,this.remove(a)}this._cardGameObjects=this._cardGameObjects.slice(0,this._cardGameObjects.length-t),this.resizeZone()},t.prototype.drawFrontCardGameObjects=function(e){var t=e.size,r=this.getFrontGameObjects({size:t});return this.removeFrontGameObjects({size:t}),r},Object.defineProperty(t.prototype,"cardGameObjects",{get:function(){return s(this._cardGameObjects)},enumerable:!1,configurable:!0}),t}(u.default.GameObjects.Container);t.PileGameObject=f},106:function(e,t,r){var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),a=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var a=arguments[t],o=0,s=a.length;o<s;o++,i++)n[i]=a[o];return n},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TableGameObject=void 0;var s=o(r(260)),c=r(895),u=function(e){function t(t){var r=t.scene,n=t.deckPileName,i=t.drawPilesNames,o=t.tableauPilesNames,s=t.discardPilesNames,u=t.dragPileName,l=t.hintPileName,d=t.cardGameObjects,f=e.call(this,r,0,0)||this;f._cardGameObjects=[],f._pileGameObjects=[],f._drawPileGameObjects=[],f._tableauPileGameObjects=[],f._discardPileGameObjects=[],f._cardGameObjects=d;var h=new c.PileGameObject({scene:f.scene,x:500,y:500,name:n});f._pileGameObjects=a(f._pileGameObjects,[h]),f._deckPileGameObject=h,f._deckPileGameObject.placeCardGameObjects({cardGameObjects:d}),f._deckPileGameObject.adjustCardGameObjectPositions(),f.add(h);for(var p=0;p<i.length;p++){var b=new c.PileGameObject({scene:f.scene,x:55+20*p,y:77,name:i[p]});f._pileGameObjects=a(f._pileGameObjects,[b]),f._drawPileGameObjects=a(f._drawPileGameObjects,[b]),f.add(b)}for(p=0;p<o.length;p++){var m=new c.PileGameObject({scene:f.scene,x:55+90*p,y:210,name:o[p],isSpread:!0,isDropTarget:!0,showDropZone:!0});f._pileGameObjects=a(f._pileGameObjects,[m]),f._tableauPileGameObjects=a(f._tableauPileGameObjects,[m]),f.add(m)}for(p=0;p<s.length;p++){var _=new c.PileGameObject({scene:f.scene,x:235+90*p,y:77,showDropZone:!0,name:s[p]});f._pileGameObjects=a(f._pileGameObjects,[_]),f._discardPileGameObjects=a(f._discardPileGameObjects,[_]),f.add(_)}var y=new c.PileGameObject({scene:f.scene,x:0,y:0,name:u,isSpread:!0});f._pileGameObjects=a(f._pileGameObjects,[y]),f._dragPileGameObject=y,f._dragPileGameObject.setActive(!1),f.add(y);var O=new c.PileGameObject({scene:f.scene,x:0,y:0,name:l,isSpread:!0});return f._pileGameObjects=a(f._pileGameObjects,[O]),f._hintPileGameObject=O,f._hintPileGameObject.setActive(!1),f.add(O),f}return i(t,e),Object.defineProperty(t.prototype,"cardGameObjects",{get:function(){return a(this._cardGameObjects)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"pileGameObjects",{get:function(){return a(this._pileGameObjects)},enumerable:!1,configurable:!0}),t.prototype.getPileGameObjectBy=function(e){var t=this._pileGameObjects.find(e);if(!t)throw new Error("The pile game object doesn't exist.");return t},t.prototype.getPileGameObjectByName=function(e){return this.getPileGameObjectBy((function(t){return t.name===e}))},t.prototype.getPileGameObjectByCardGameObjectName=function(e){return this.getPileGameObjectBy((function(t){return t.cardGameObjects.find((function(t){return t.name===e}))}))},Object.defineProperty(t.prototype,"deckPileGameObject",{get:function(){return this._deckPileGameObject},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"drawPileGameObjects",{get:function(){return a(this._drawPileGameObjects)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"tableauPileGameObjects",{get:function(){return a(this._tableauPileGameObjects)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dragPileGameObject",{get:function(){return this._dragPileGameObject},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"hintPileGameObject",{get:function(){return this._hintPileGameObject},enumerable:!1,configurable:!0}),t}(s.default.GameObjects.Container);t.TableGameObject=u},202:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getWorldPosition=void 0,t.getWorldPosition=function(e){for(var t=e.parentContainer,r=e.x,n=e.y;t;)r+=t.x,n+=t.y,t=t.parentContainer;return{x:r,y:n}}},607:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=n(r(260)),a=n(r(932)),o=n(r(483)),s=n(r(978)),c=n(r(44)),u=r(310),l={type:i.default.AUTO,scale:{mode:i.default.Scale.FIT,autoCenter:i.default.Scale.CENTER_BOTH,width:1e3,height:563,max:{width:1e3,height:563},autoRound:!0},scene:[o.default,a.default,s.default,c.default],backgroundColor:"#"+u.BACKGROUND_COLOR.toString(16)};window.addEventListener("load",(function(){new i.default.Game(l)}))},234:function(e,t,r){var n=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var a=arguments[t],o=0,s=a.length;o<s;o++,i++)n[i]=a[o];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.JobQueue=void 0;var i=r(22),a=function(){function e(e){this._onStartCallback=function(){},this._onEndCallback=function(){},this._onFailCallback=function(){},this._onQueueCancelCallback=function(){},this._status=0,this._jobPromiseCreator=e}return e.prototype.start=function(){var e=this;if(this.isUntouched){var t=this._jobPromiseCreator((function(t){return e._onQueueCancelCallback=t}));this._status=1,this._onStartCallback(),t.then((function(t){e._status=2,e._onEndCallback(t)})).catch((function(t){e._status=2,e._onFailCallback(t)}))}},Object.defineProperty(e.prototype,"onStartCallback",{set:function(e){this._onStartCallback=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"onEndCallback",{set:function(e){this._onEndCallback=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"onFailCallback",{set:function(e){this._onFailCallback=e},enumerable:!1,configurable:!0}),e.prototype.runQueueCancelCallback=function(){this._onQueueCancelCallback()},Object.defineProperty(e.prototype,"isUntouched",{get:function(){return 0===this._status},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isProcessing",{get:function(){return 1===this._status},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isDone",{get:function(){return 2===this._status},enumerable:!1,configurable:!0}),e}(),o=function(){function e(){this._hasStarted=!1,this._currentIndex=0,this._jobQueue=[],this._emitter=new i.Emitter}return Object.defineProperty(e.prototype,"isProcessing",{get:function(){return this._hasStarted},enumerable:!1,configurable:!0}),e.prototype.add=function(e){var t=this,r=new a(e);r.onStartCallback=function(){t._emitter.emit("JOB_START",{})},r.onEndCallback=function(e){t._emitter.emit("JOB_END",{value:e}),t._currentIndex=t._currentIndex+1,t._process()},r.onFailCallback=function(e){console.error(e)},this._jobQueue=n(this._jobQueue,[r]),this._process()},e.prototype._process=function(){if(this._hasStarted||(this._hasStarted=!0,this._emitter.emit("QUEUE_START",{})),this._currentIndex<this._jobQueue.length){var e=this._jobQueue[this._currentIndex];e&&e.isUntouched&&e.start()}else this._hasStarted=!1,this._jobQueue=[],this._currentIndex=0,this._emitter.emit("QUEUE_END",{})},e.prototype.cancel=function(){var e=this._hasStarted,t=this._jobQueue[this._currentIndex];this._hasStarted=!1,this._jobQueue=[],this._currentIndex=0,e&&t&&t.isProcessing?(t.onEndCallback=function(){},t.runQueueCancelCallback(),this._emitter.emit("QUEUE_CANCEL",{actuallyCancelled:!0})):this._emitter.emit("QUEUE_CANCEL",{actuallyCancelled:!1})},e.prototype.onQueueStart=function(e){this._emitter.on("QUEUE_START",e)},e.prototype.onQueueEnd=function(e){this._emitter.on("QUEUE_END",e)},e.prototype.onQueueCancel=function(e){this._emitter.on("QUEUE_CANCEL",e)},e.prototype.onJobStart=function(e){this._emitter.on("JOB_START",e)},e.prototype.onJobEnd=function(e){this._emitter.on("JOB_END",e)},e}();t.JobQueue=o},291:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Card=t.Suit=void 0;var n,i=r(732),a=r(22);(n=t.Suit||(t.Suit={})).Spade="♠",n.Club="♣",n.Diamond="♦",n.Heart="♥",n.Star="★";var o=function(){function e(e){var t=e.suit,r=e.rank,n=e.isFaceUp,o=e.id;if(this._emitter=new a.Emitter,this._suit=t,this._isFaceUp=n||!1,this._id=o||i.nanoid(),!(1<=r&&r<=13))throw new Error("The card rank "+r+" is invalid.");this._rank=r}return Object.defineProperty(e.prototype,"suit",{get:function(){return this._suit},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"suitMark",{get:function(){return this._suit.toString()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rank",{get:function(){return this._rank},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rankMark",{get:function(){return function(e){if(e<1||13<e)throw new Error("Card rank is invalid.");return 11===e?"J":12===e?"Q":13===e?"K":e.toString()}(this._rank)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isFaceUp",{get:function(){return this._isFaceUp},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this._id},enumerable:!1,configurable:!0}),e.prototype.faceUp=function(){this._isFaceUp=!0,this._emitter.emit("FLIP_OVER_CARD",{card:this})},e.prototype.faceDown=function(){this._isFaceUp=!1,this._emitter.emit("FLIP_OVER_CARD",{card:this})},e.prototype.flipOver=function(){this._isFaceUp=!this._isFaceUp,this._emitter.emit("FLIP_OVER_CARD",{card:this})},e.prototype.onFlipOver=function(e){this._emitter.on("FLIP_OVER_CARD",e)},e.prototype.toString=function(){return this.suitMark+this.rankMark+(this._isFaceUp?"+":"-")},e}();t.Card=o},146:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createCards=void 0;var n=r(291),i=function(e){var t=e.rank,r=e.suit,i=e.isFaceUp;return new n.Card({suit:r,rank:t,isFaceUp:i})};t.createCards=function(e){for(var t=e.numberOfDecksUsed,r=e.numberOfSuits,a=[],o=e.mapping||i,s=0;s<t;s++)for(var c=1;c<=13;c++){var u=13*s+13;switch(r){case 5:a.push(o({rank:c,suit:n.Suit.Star,isFaceUp:!1,index:u}));case 4:a.push(o({rank:c,suit:n.Suit.Diamond,isFaceUp:!1,index:u}));case 3:a.push(o({rank:c,suit:n.Suit.Club,isFaceUp:!1,index:u}));case 2:a.push(o({rank:c,suit:n.Suit.Heart,isFaceUp:!1,index:u}));case 1:a.push(o({rank:c,suit:n.Suit.Spade,isFaceUp:!1,index:u}))}}return a}},257:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.gameModes=void 0,t.gameModes=Object.freeze({"five-suits":{numberOfTableauPiles:10,numberOfDrawPiles:5,numberOfDecksUsed:2,numberOfSuits:5},"four-suits":{numberOfTableauPiles:10,numberOfDrawPiles:5,numberOfDecksUsed:2,numberOfSuits:4},"two-suits":{numberOfTableauPiles:10,numberOfDrawPiles:5,numberOfDecksUsed:4,numberOfSuits:2},"one-suits":{numberOfTableauPiles:10,numberOfDrawPiles:5,numberOfDecksUsed:8,numberOfSuits:1}})},261:function(e,t){var r=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var a=arguments[t],o=0,s=a.length;o<s;o++,i++)n[i]=a[o];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.Pile=void 0;var n=function(){function e(e){void 0===e&&(e={}),this._cards=e.cards||[],this._name=e.label||""}return Object.defineProperty(e.prototype,"name",{get:function(){return this._name},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"cards",{get:function(){return r(this._cards)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"frontCard",{get:function(){return this._cards[this._cards.length-1]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lastCard",{get:function(){return this._cards[0]},enumerable:!1,configurable:!0}),e.prototype.getFrontCards=function(e){var t=e.size,r=this._cards;if(0===r.length||t<1)return[];var n=Math.min(r.length,t);return r.slice(r.length-n)},e.prototype.drawCards=function(e){var t=e.size,r=this._cards;if(0===r.length||t<1)return[];var n=Math.min(r.length,t),i=r.slice(r.length-n);return this._cards=r.slice(0,-t),i},e.prototype.placeCards=function(e){var t=e.cards;this._cards=r(this._cards,t)},e.prototype.getDescendingInSuitFrontCards=function(){return e.getDescendingFrontCards({cards:this._cards,inSuit:!0,faceUp:!0})},e.getDescendingFrontCards=function(e){var t=e.cards,n=e.inSuit||!1,i=e.faceUp||!1;if(0===t.length)return[];var a=t[t.length-1];if(i&&!a.isFaceUp)return[];for(var o=[a],s=t.length-2;s>=0;s--){var c=t[s];if(a.rank+1!==c.rank||n&&a.suit!==c.suit||i&&!c.isFaceUp)break;o=r([c],o),a=c}return o},e.checkIfCardsAreDescending=function(t){var r=t.cards,n=t.inSuit,i=t.faceUp;return e.getDescendingFrontCards({cards:r,inSuit:n,faceUp:i}).length===r.length},e.prototype.checkIfFrontCardsComplete=function(){return this.cards.length>=13&&e.checkIfCardsAreDescending({cards:this.cards.slice(-13),inSuit:!0,faceUp:!0})},e.prototype.toString=function(){return this.cards.map((function(e){return e.toString()})).join(" ")},e}();t.Pile=n},721:function(e,t,r){var n=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var a=arguments[t],o=0,s=a.length;o<s;o++,i++)n[i]=a[o];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.Table=void 0;var i=r(261),a=r(209),o=r(448),s=r(22),c=function(){function e(e){var t=this;this._emitter=new s.Emitter,this._settings=e,this._cards=e.cards,this._deckPile=new i.Pile({label:"deck",cards:e.cards}),this._drawPiles=Array.from({length:e.numberOfDrawPiles}).map((function(e,t){return new i.Pile({label:"draw"+t,cards:[]})})),this._tableauPiles=Array.from({length:e.numberOfTableauPiles}).map((function(e,t){return new i.Pile({label:"tabl"+t,cards:[]})})),this._discardPiles=Array.from({length:Math.floor(e.cards.length/13)}).map((function(e,t){return new i.Pile({label:"disc"+t,cards:[]})})),this._piles=n([this._deckPile],this._drawPiles,this.tableauPiles,this._discardPiles),this._actionHistory=new a.UndoableActionHistory,this._simplifiedUndoableActions=[],this._actionHistory.onAdd((function(e){t._simplifiedUndoableActions=n(t._simplifiedUndoableActions,[o.simplify(e)]),t._emitter.emit("ACTION_HAPPEN",void 0)})),this._actionHistory.onRemove((function(){t._simplifiedUndoableActions=t._simplifiedUndoableActions.slice(0,-1),t._emitter.emit("ACTION_HAPPEN",void 0)}))}return Object.defineProperty(e.prototype,"cards",{get:function(){return n(this._cards)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"piles",{get:function(){return n(this._piles)},enumerable:!1,configurable:!0}),e.prototype.getPileBy=function(e){var t=this._piles.find(e);if(!t)throw new Error("The pile doesn't exist.");return t},e.prototype.getPileByName=function(e){return this.getPileBy((function(t){return t.name===e}))},e.prototype.getPileByCardId=function(e){return this.getPileBy((function(t){return!!t.cards.find((function(t){return t.id===e}))}))},e.prototype.getCardBy=function(e){var t=this._cards.find(e);if(!t)throw new Error("The card doesn't exist.");return t},e.prototype.getCardById=function(e){return this.getCardBy((function(t){return t.id===e}))},Object.defineProperty(e.prototype,"deckPile",{get:function(){return this._deckPile},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"drawPiles",{get:function(){return n(this._drawPiles)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"tableauPiles",{get:function(){return n(this._tableauPiles)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"discardPiles",{get:function(){return n(this._discardPiles)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isClear",{get:function(){return!this._tableauPiles.find((function(e){return e.cards.length>0}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"simplifiedUndoableActions",{get:function(){return this._simplifiedUndoableActions},enumerable:!1,configurable:!0}),e.prototype._moveCardBetweenPiles=function(e){var t=e.from,r=e.to,n=e.size;if(!this._piles.find((function(e){return e===t})))throw new Error('The "from" pile is not be in this table.');if(!this._piles.find((function(e){return e===r})))throw new Error('The "to" pile is not be in this table.');if(t.getFrontCards({size:n}).length!==n)throw new Error('The pile "'+t.name+"\" doesn't have "+n+" cards to draw.");var i=t.drawCards({size:n});r.placeCards({cards:i}),this._emitter.emit("MOVE_CARDS_BETWEEN_PILES",{from:t,to:r,size:n})},e.prototype._dealCardsFromDeckToTableauPiles=function(){for(var e=this._deckPile.cards.length,t=this._settings.numberOfTableauPiles*this._settings.numberOfDrawPiles,r=0,n=0;n<e-t;n++){var i=this._deckPile,a=this._tableauPiles[r%this.tableauPiles.length];this._moveCardBetweenPiles({from:i,to:a,size:1}),r+=1}},e.prototype._dealCardsFromDeckToDrawPiles=function(){for(var e=0;e<this._settings.numberOfDrawPiles;e++){var t=this._deckPile,r=this._drawPiles[e];this._moveCardBetweenPiles({from:t,to:r,size:this._settings.numberOfTableauPiles})}},e.prototype._flipUpTableauFrontCards=function(){for(var e=0,t=this._tableauPiles;e<t.length;e++){var r=t[e];r.frontCard&&this._faceUpCard({card:r.frontCard})}},e.prototype._faceUpCard=function(e){var t=e.card;t.isFaceUp||t.faceUp()},e.prototype.startGame=function(){this._dealCardsFromDeckToTableauPiles(),this._dealCardsFromDeckToDrawPiles(),this._flipUpTableauFrontCards()},e.prototype.moveCardBetweenTableauPiles=function(e){var t=e.from,r=e.to,o=e.size;if(!this._tableauPiles.find((function(e){return e===t})))throw new Error('The "from" pile is not a tableau pile.');if(!this._tableauPiles.find((function(e){return e===r})))throw new Error('The "to" pile is not a tableau pile.');var s=t.getFrontCards({size:o});if(s.length!==o)throw new Error('The pile "'+t.name+"\" doesn't have "+o+" cards to draw.");if(r.frontCard&&!i.Pile.checkIfCardsAreDescending({cards:n([r.frontCard],s),inSuit:!1,faceUp:!0}))throw new Error('You can\'t place those cards to the "to" pile.');this._moveCardBetweenPiles({from:t,to:r,size:o}),this._actionHistory.add({from:t,to:r,size:o,type:a.MOVE_CARD}),t.frontCard&&!t.frontCard.isFaceUp&&(this._faceUpCard({card:t.frontCard}),this._actionHistory.add({card:t.frontCard,type:a.FACE_UP_CARD}));var c=this._discardPiles.find((function(e){return 0===e.cards.length}));if(!c)throw new Error("There aren't any empty discarded piles.");if(r.checkIfFrontCardsComplete()){for(var u=0;u<13;u++)this._moveCardBetweenPiles({from:r,to:c,size:1}),this._actionHistory.add({from:r,to:c,size:1,type:a.MOVE_CARD});r.frontCard&&!r.frontCard.isFaceUp&&(this._faceUpCard({card:r.frontCard}),this._actionHistory.add({card:r.frontCard,type:a.FACE_UP_CARD}))}this._actionHistory.add({type:a.PAUSE})},Object.defineProperty(e.prototype,"frontDrawPile",{get:function(){for(var e,t=this._drawPiles.length-1;t>=0;t--)if(this._drawPiles[t].cards.length===this._settings.numberOfTableauPiles){e=this._drawPiles[t];break}return e},enumerable:!1,configurable:!0}),e.prototype.dealCardsFromDrawPile=function(){var e=this.frontDrawPile;if(!e)throw new Error("There are no cards to draw from draw piles.");for(var t=0;t<this._tableauPiles.length;t++){var r=this._tableauPiles[t];this._moveCardBetweenPiles({from:e,to:r,size:1}),this._actionHistory.add({from:e,to:r,size:1,type:a.MOVE_CARD})}for(var n=0,i=this._tableauPiles;n<i.length;n++)(r=i[n]).frontCard&&!r.frontCard.isFaceUp&&(this._faceUpCard({card:r.frontCard}),this._actionHistory.add({card:r.frontCard,type:a.FACE_UP_CARD}));this._actionHistory.add({type:a.PAUSE})},e.prototype.undo=function(){e:for(;e=this._actionHistory.latest;)switch(e.type){case a.PAUSE:this._actionHistory.remove();break;default:break e}e:for(;;){var e;if(!(e=this._actionHistory.latest))break e;switch(e.type){case a.FACE_UP_CARD:e.card.faceDown(),this._actionHistory.remove();break;case a.MOVE_CARD:this._moveCardBetweenPiles({from:e.to,to:e.from,size:e.size}),this._actionHistory.remove();break;case a.PAUSE:this._actionHistory.remove();break e}}},e.prototype.getHints=function(){for(var e=[],t=0,r=this._tableauPiles;t<r.length;t++){var a=r[t],o=a.getDescendingInSuitFrontCards();if(0!==o.length)for(var s=0,c=this._tableauPiles;s<c.length;s++){var u=c[s];if(a!==u&&(o.length!==a.cards.length||u.frontCard))for(var l=o.length;l>0;l--)(l===o.length||u.frontCard)&&(u.frontCard&&!i.Pile.checkIfCardsAreDescending({cards:n([u.frontCard],o.slice(-l)),inSuit:!1,faceUp:!0})||(e=n(e,[{from:a,to:u,size:l}])))}}return e},e.prototype.reproduce=function(e){for(var t=this,r=0;r<e.length;r++){var n=o.recover({simplifiedUndoableAction:e[r],cardFinder:function(e){return t.getCardById(e)},pileFinder:function(e){return t.getPileByName(e)}});switch(n.type){case a.FACE_UP_CARD:n.card.faceUp(),this._actionHistory.add({card:n.card,type:a.FACE_UP_CARD});break;case a.MOVE_CARD:this._moveCardBetweenPiles({from:n.from,to:n.to,size:n.size}),this._actionHistory.add({from:n.from,to:n.to,size:n.size,type:a.MOVE_CARD});break;case a.PAUSE:this._actionHistory.add({type:a.PAUSE})}}},e.prototype.onMoveCardsBetweenPiles=function(e){this._emitter.on("MOVE_CARDS_BETWEEN_PILES",e)},e.prototype.onActionHappen=function(e){this._emitter.on("ACTION_HAPPEN",e)},e.prototype.toString=function(){return this._piles.map((function(e){return e.name+" "+e.toString()})).join("\n")},e}();t.Table=c},209:function(e,t,r){var n=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var a=arguments[t],o=0,s=a.length;o<s;o++,i++)n[i]=a[o];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.UndoableActionHistory=t.PAUSE=t.MOVE_CARD=t.FACE_UP_CARD=void 0;var i=r(22);t.FACE_UP_CARD="FACE_UP_CARD",t.MOVE_CARD="MOVE_CARD",t.PAUSE="PAUSE";var a=function(){function e(){this._actions=[],this._emitter=new i.Emitter}return e.prototype.add=function(e){this._actions=n(this._actions,[e]),this._emitter.emit("ADD",e)},e.prototype.remove=function(){var e=this._actions.slice(-1)[0];this._actions=this._actions.slice(0,-1),this._emitter.emit("REMOVE",e)},e.prototype.onAdd=function(e){this._emitter.on("ADD",e)},e.prototype.onRemove=function(e){this._emitter.on("REMOVE",e)},Object.defineProperty(e.prototype,"latest",{get:function(){return 0===this._actions.length?void 0:this._actions[this._actions.length-1]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"actions",{get:function(){return n(this._actions)},enumerable:!1,configurable:!0}),e}();t.UndoableActionHistory=a},448:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.recover=t.simplify=void 0;var n=r(209);t.simplify=function(e){switch(e.type){case n.FACE_UP_CARD:return{t:"F",c:e.card.id};case n.MOVE_CARD:return{t:"M",f:e.from.name,o:e.to.name,s:e.size+""};default:return{t:"P"}}},t.recover=function(e){var t=e.simplifiedUndoableAction,r=e.cardFinder,i=e.pileFinder;switch(t.t){case"F":return{type:n.FACE_UP_CARD,card:r(t.c||"")};case"M":return{type:n.MOVE_CARD,from:i(t.f||""),to:i(t.o||""),size:parseInt(t.s||"")};case"P":default:return{type:n.PAUSE}}}},483:function(e,t,r){var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=a(r(260)),s=r(539),c=r(310),u=r(257),l=o.default.GameObjects.Rectangle,d=o.default.GameObjects.Text,f=function(e){function t(){return e.call(this,"boot")||this}return i(t,e),t.prototype.create=function(){var e=this,t=localStorage.getItem("game-mode");if(t&&u.gameModes[t])this.scene.start("main");else{var r=this.sys.game.canvas.width,n=this.sys.game.canvas.height,i=new l(this,r/2,n/2,r,n,c.BACKGROUND_COLOR,.8);this.children.add(i);var a=new d(this,0,0,"Spider Spider Solitaire",{fontSize:"50px",color:"#000000",fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif'});a.x=r/2-a.width/2-30,a.y=n/2-a.height/2-120,this.children.add(a);var o=new s.Button({scene:this,x:0,y:0,label:"One Suit"});o.x=r/2-o.width/2-100,o.y=n/2-o.height/2+120,o.on("pointerdown",(function(){localStorage.setItem("game-mode","one-suits"),e.scene.start("main")})),this.children.add(o);var f=new s.Button({scene:this,x:0,y:0,label:"Two Suits"});f.x=r/2-f.width/2+100,f.y=n/2-f.height/2+120,f.on("pointerdown",(function(){localStorage.setItem("game-mode","two-suits"),e.scene.start("main")})),this.children.add(f);var h=new s.Button({scene:this,x:0,y:0,label:"Four Suits"});h.x=r/2-h.width/2-100,h.y=n/2-h.height/2+30,h.on("pointerdown",(function(){localStorage.setItem("game-mode","four-suits"),e.scene.start("main")})),this.children.add(h)}},t}(o.default.Scene);t.default=f},978:function(e,t,r){var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=a(r(260)),s=r(539),c=o.default.GameObjects.Rectangle,u=o.default.GameObjects.Text,l=function(e){function t(){return e.call(this,"gameclear")||this}return i(t,e),t.prototype.create=function(){var e=this,t=this.sys.game.canvas.width,r=this.sys.game.canvas.height,n=new c(this,t/2,r/2,t,r,15790320,.8);this.children.add(n);var i=new u(this,0,0,"Congratulations!",{fontSize:"50px",color:"#ff00dd",fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif'});i.x=t/2-i.width/2,i.y=r/2-i.height/2-20,this.children.add(i);var a=new s.Button({scene:this,x:0,y:0,label:"Start Over"});a.x=t/2,a.y=r/2+50,a.on("pointerdown",(function(){e.scene.start("main")})),this.children.add(a)},t}(o.default.Scene);t.default=l},932:function(e,t,r){var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),a=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,a){function o(e){try{c(n.next(e))}catch(e){a(e)}}function s(e){try{c(n.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(o,s)}c((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var r,n,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,n=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},s=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var a=arguments[t],o=0,s=a.length;o<s;o++,i++)n[i]=a[o];return n},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=c(r(260)),l=r(106),d=r(852),f=r(539),h=r(291),p=r(261),b=r(721),m=r(146),_=r(234),y=r(257),O=function(e){function t(){var t=e.call(this,"main")||this;return t._RND=new u.default.Math.RandomDataGenerator,t}return i(t,e),Object.defineProperty(t.prototype,"_table",{get:function(){if(!this.__table)throw new Error("Table is not ready.");return this.__table},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_tableGameObject",{get:function(){if(!this.__tableGameObject)throw new Error("Table Game Object is not ready.");return this.__tableGameObject},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_cardAnimationQueue",{get:function(){if(!this.__cardAnimationQueue)throw new Error("cardAnimationQueue is not ready.");return this.__cardAnimationQueue},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_hintAnimationQueue",{get:function(){if(!this.__hintAnimationQueue)throw new Error("hintAnimationQueue is not ready.");return this.__hintAnimationQueue},enumerable:!1,configurable:!0}),t.prototype.create=function(){var e=this,t=localStorage.getItem("game-mode");if(t&&y.gameModes[t]){var r=y.gameModes[t],n=localStorage.getItem("seed");n?this._RND.state(n):localStorage.setItem("seed",this._RND.state()),this.__table=new b.Table({numberOfTableauPiles:r.numberOfTableauPiles,numberOfDrawPiles:r.numberOfDrawPiles,cards:this._RND.shuffle(m.createCards({numberOfDecksUsed:r.numberOfDecksUsed,numberOfSuits:r.numberOfSuits,mapping:function(t){var r=t.rank,n=t.suit,i=t.isFaceUp;return new h.Card({suit:n,rank:r,isFaceUp:i,id:e._RND.uuid()})}}).map((function(t){return t.onFlipOver(e.onFlipOverCard.bind(e)),t})))}),this.__tableGameObject=new l.TableGameObject({scene:this,deckPileName:this._table.deckPile.name,drawPilesNames:this._table.drawPiles.map((function(e){return e.name})),tableauPilesNames:this._table.tableauPiles.map((function(e){return e.name})),discardPilesNames:this._table.discardPiles.map((function(e){return e.name})),dragPileName:"drag",hintPileName:"hint",cardGameObjects:this._table.cards.map((function(t){var r=new d.CardGameObject({scene:e,x:0,y:0,suit:t.suit,rank:t.rank,name:t.id});return r.on("pointerover",(function(t){return e.onCardPointerOver.call(e,{cardGameObject:r,pointer:t})})),r.on("pointerout",(function(t){return e.onCardPointerOut.call(e,{cardGameObject:r,pointer:t})})),r.on("pointerdown",(function(t){return e.onCardPointerDown.call(e,{cardGameObject:r,pointer:t})})),r.on("dragstart",(function(t){return e.onCardDragStart.call(e,{cardGameObject:r,pointer:t})})),r.on("drag",(function(t){return e.onCardDrag.call(e,{cardGameObject:r,pointer:t})})),r.on("drop",(function(t,n){return e.onCardDrop.call(e,{cardGameObject:r,pointer:t,zone:n})})),r.on("dragend",(function(t){return e.onCardDragEnd.call(e,{cardGameObject:r,pointer:t})})),r}))}),this.children.add(this._tableGameObject),this.__cardAnimationQueue=new _.JobQueue,this.__hintAnimationQueue=new _.JobQueue;var i=new f.Button({scene:this,x:77,y:520,label:"Undo(U)"});i.on("pointerdown",(function(){return e._table.undo()})),this.children.add(i),this._cardAnimationQueue.onQueueStart((function(){return i.disable()})),this._cardAnimationQueue.onQueueEnd((function(){return i.enable()})),this._cardAnimationQueue.onQueueCancel((function(){return i.enable()})),this._hintAnimationQueue.onQueueStart((function(){return i.disable()})),this._hintAnimationQueue.onQueueEnd((function(){return i.enable()})),this._hintAnimationQueue.onQueueCancel((function(){return i.enable()})),this.input.keyboard.addKey(u.default.Input.Keyboard.KeyCodes.U).on("down",(function(t){i.isDisabled||e._table.undo()}));var a=new f.Button({scene:this,x:206,y:520,label:"Hint(H)"});a.on("pointerdown",(function(){return e.showHints()})),this.children.add(a),this._cardAnimationQueue.onQueueStart((function(){return a.disable()})),this._cardAnimationQueue.onQueueEnd((function(){return a.enable()})),this._cardAnimationQueue.onQueueCancel((function(){return a.enable()})),this._hintAnimationQueue.onQueueStart((function(){return a.disable()})),this._hintAnimationQueue.onQueueEnd((function(){return a.enable()})),this._hintAnimationQueue.onQueueCancel((function(){return a.enable()})),this.input.keyboard.addKey(u.default.Input.Keyboard.KeyCodes.H).on("down",(function(t){a.isDisabled||e.showHints()})),this.input.on("pointerdown",(function(t,r){!r.includes(a)&&e._hintAnimationQueue.isProcessing&&e._hintAnimationQueue.cancel()})),this._table.onMoveCardsBetweenPiles(this.onMoveCardsBetweenPiles.bind(this)),this._table.onActionHappen((function(){localStorage.setItem("actions",JSON.stringify(e._table.simplifiedUndoableActions))})),this._table.startGame();var o=localStorage.getItem("actions");n&&o&&this._table.reproduce(JSON.parse(o));var s=new f.Button({scene:this,x:337,y:520,label:"Menu(M)"});s.on("pointerdown",(function(){return e.showMenu()})),this.children.add(s),this.input.keyboard.addKey(u.default.Input.Keyboard.KeyCodes.M).on("up",(function(t){e.showMenu()}))}else this.scene.start("boot")},t.prototype.onCardPointerOver=function(e){var t=e.cardGameObject;if(!this._cardAnimationQueue.isProcessing){var r=this._tableGameObject.getPileGameObjectByCardGameObjectName(t.name);if(t.isFaceUp&&this._tableGameObject.tableauPileGameObjects.includes(r)){var n=this._table.getPileByCardId(t.name),i=this._tableGameObject.getPileGameObjectByName(n.name),a=i.cardGameObjects.length-i.cardGameObjects.indexOf(t);p.Pile.checkIfCardsAreDescending({cards:n.cards.slice(-a),faceUp:!0,inSuit:!0})&&t.addHighlight()}else this._table.frontDrawPile&&r===this._tableGameObject.getPileGameObjectByName(this._table.frontDrawPile.name)&&t.addHighlight()}},t.prototype.onCardPointerOut=function(e){e.cardGameObject.removeHighlight()},t.prototype.onCardPointerDown=function(e){var t=e.cardGameObject,r=this._tableGameObject.getPileGameObjectByCardGameObjectName(t.name);this._table.frontDrawPile&&!this._cardAnimationQueue.isProcessing&&this._tableGameObject.getPileGameObjectByName(this._table.frontDrawPile.name)===r&&this._table.dealCardsFromDrawPile()},t.prototype.onCardDragStart=function(e){var t=this,r=e.cardGameObject,n=this._tableGameObject.getPileGameObjectByCardGameObjectName(r.name),i=this._tableGameObject.dragPileGameObject;if(r.isFaceUp&&this._tableGameObject.tableauPileGameObjects.includes(n)&&!i.active){var s=this._table.getPileByCardId(r.name),c=this._tableGameObject.getPileGameObjectByName(s.name),u=c.cardGameObjects.length-c.cardGameObjects.indexOf(r);if(p.Pile.checkIfCardsAreDescending({cards:s.cards.slice(-u),faceUp:!0,inSuit:!0})){var l=this._tableGameObject.dragPileGameObject,d=r.y;l.setActive(!0),this._tableGameObject.bringToTop(l),l.x=c.x,l.y=c.y+d,l.placeCardGameObjects({cardGameObjects:c.drawFrontCardGameObjects({size:u})}),this._cardAnimationQueue.add((function(){return a(t,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return[4,Promise.all([l.adjustCardGameObjectPositionsWithAnimation(),l.expandWithAnimation()])];case 1:return e.sent(),[2]}}))}))}))}}},t.prototype.onCardDrag=function(e){var t=e.pointer,r=e.cardGameObject,n=this._tableGameObject.getPileGameObjectByCardGameObjectName(r.name),i=this._tableGameObject.dragPileGameObject;if(n===i&&i.active){var a=t.x-t.prevPosition.x,o=t.y-t.prevPosition.y;i.x+=a,i.y+=o}},t.prototype.onCardDrop=function(e){var t=this,r=e.zone,n=e.cardGameObject,i=this._tableGameObject.getPileGameObjectByCardGameObjectName(n.name),c=this._tableGameObject.dragPileGameObject;if(i===c&&c.active){var u=this._table.getPileByCardId(n.name),l=this._tableGameObject.getPileGameObjectByName(u.name),d=this._tableGameObject.getPileGameObjectBy((function(e){return e.zone===r})),f=this._table.getPileByName(d.name),h=c.cardGameObjects.length,b=c.drawFrontCardGameObjects({size:h});l.placeCardGameObjects({cardGameObjects:b});var m=b.map((function(e){var r=t._table.cards.find((function(t){return e.name===t.id}));if(!r)throw new Error("Couldn't find corresponding cards.");return r}));!f.frontCard||p.Pile.checkIfCardsAreDescending({cards:s([f.frontCard],m),faceUp:!0})?(this._table.moveCardBetweenTableauPiles({to:f,from:u,size:h}),c.setActive(!1)):this._cardAnimationQueue.add((function(){return a(t,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return[4,l.adjustCardGameObjectPositionsWithAnimation()];case 1:return e.sent(),c.setActive(!1),[2]}}))}))}))}},t.prototype.onCardDragEnd=function(e){var t=this,r=e.cardGameObject,n=this._tableGameObject.getPileGameObjectByCardGameObjectName(r.name),i=this._tableGameObject.dragPileGameObject;if(n===i&&i.active){var s=i.cardGameObjects.length,c=this._table.getPileByCardId(r.name),u=this._tableGameObject.getPileGameObjectByName(c.name),l=i.drawFrontCardGameObjects({size:s});u.placeCardGameObjects({cardGameObjects:l}),this._cardAnimationQueue.add((function(){return a(t,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return[4,u.adjustCardGameObjectPositionsWithAnimation()];case 1:return e.sent(),i.setActive(!1),[2]}}))}))}))}},t.prototype.onMoveCardsBetweenPiles=function(e){var t=this,r=e.from,n=e.to,i=e.size,s=this._tableGameObject.getPileGameObjectByName(r.name),c=this._tableGameObject.getPileGameObjectByName(n.name);this._cardAnimationQueue.add((function(){return a(t,void 0,void 0,(function(){var e;return o(this,(function(t){switch(t.label){case 0:return e=s.drawFrontCardGameObjects({size:i}),c.placeCardGameObjects({cardGameObjects:e}),this._tableGameObject.bringToTop(c),[4,Promise.all([c.adjustCardGameObjectPositionsWithAnimation(),s.adjustCardGameObjectPositionsWithAnimation()])];case 1:return t.sent(),[2]}}))}))})),this._table.isClear&&this._cardAnimationQueue.add((function(){return a(t,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return[4,new Promise((function(e){return setTimeout(e,100)}))];case 1:return e.sent(),this.clearGame(),[2]}}))}))}))},t.prototype.onFlipOverCard=function(e){var t=e.card,r=this._tableGameObject.cardGameObjects.find((function(e){return e.name===t.id}));r&&this._cardAnimationQueue.add((function(){return r.flipOver(t.isFaceUp)}))},t.prototype.showHints=function(){for(var e=this,t=this._table.getHints(),r=this._tableGameObject.hintPileGameObject,n=function(){r.drawFrontCardGameObjects({size:r.cardGameObjects.length}).forEach((function(e){return e.destroy()}))},i=function(t,i,c){s._hintAnimationQueue.add((function(s){return a(e,void 0,void 0,(function(){var e,a,u,l=this;return o(this,(function(o){switch(o.label){case 0:return e=this._tableGameObject.getPileGameObjectByName(t.name),a=this._tableGameObject.getPileGameObjectByName(i.name),u=e.getFrontGameObjects({size:c}),r.x=e.x,r.y=e.y+u[0].y,r.placeCardGameObjects({cardGameObjects:u.map((function(e){return new d.CardGameObject({x:0,y:0,rank:e.rank,suit:e.suit,isFaceUp:e.isFaceUp,name:"",scene:l})}))}),r.adjustCardGameObjectPositions(),r.setAlpha(.8),this._tableGameObject.bringToTop(r),[4,new Promise((function(e){var t=l.tweens.add({targets:r,props:{x:a.x,y:a.y+a.getNewFrontCardGameObjectPosition().y},duration:800,completeDelay:400,onComplete:function(){e(),n()}});s((function(){t.stop(),n()}))}))];case 1:return o.sent(),[2]}}))}))}))},s=this,c=0,u=t;c<u.length;c++){var l=u[c];i(l.from,l.to,l.size)}},t.prototype.clearGame=function(){this.scene.pause(),localStorage.removeItem("seed"),localStorage.removeItem("actions"),this.scene.launch("gameclear")},t.prototype.showMenu=function(){this.scene.pause(),this.scene.launch("menu")},t}(u.default.Scene);t.default=O},44:function(e,t,r){var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=a(r(260)),s=r(539),c=r(310),u=o.default.GameObjects.Rectangle,l=(o.default.GameObjects.Text,function(e){function t(){return e.call(this,"menu")||this}return i(t,e),t.prototype.create=function(){var e=this,t=this.sys.game.canvas.width,r=this.sys.game.canvas.height,n=new u(this,t/2,r/2,t,r,c.BACKGROUND_COLOR,.8);this.children.add(n);var i=new s.Button({scene:this,x:0,y:0,label:"Back to Game"});i.x=t/2,i.y=r/2-50,i.on("pointerdown",(function(){e.scene.resume("main"),e.scene.stop()})),this.children.add(i);var a=new s.Button({scene:this,x:0,y:0,label:"Quit and Start New Game"});a.x=t/2,a.y=r/2+50,a.on("pointerdown",(function(){localStorage.removeItem("seed"),localStorage.removeItem("actions"),localStorage.removeItem("game-mode"),e.scene.stop("main"),e.scene.start("boot")})),this.children.add(a)},t}(o.default.Scene));t.default=l},310:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BACKGROUND_COLOR=void 0,t.BACKGROUND_COLOR=7584300}},t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}r.m=e,r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={143:0},t=[[607,216]],n=()=>{};function i(){for(var n,i=0;i<t.length;i++){for(var a=t[i],o=!0,s=1;s<a.length;s++){var c=a[s];0!==e[c]&&(o=!1)}o&&(t.splice(i--,1),n=r(r.s=a[0]))}return 0===t.length&&(r.x(),r.x=()=>{}),n}r.x=()=>{r.x=()=>{},o=o.slice();for(var e=0;e<o.length;e++)a(o[e]);return(n=i)()};var a=i=>{for(var a,o,[c,u,l,d]=i,f=0,h=[];f<c.length;f++)o=c[f],r.o(e,o)&&e[o]&&h.push(e[o][0]),e[o]=0;for(a in u)r.o(u,a)&&(r.m[a]=u[a]);for(l&&l(r),s(i);h.length;)h.shift()();return d&&t.push.apply(t,d),n()},o=self.webpackChunkspider_solitaire=self.webpackChunkspider_solitaire||[],s=o.push.bind(o);o.push=a})(),r.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,